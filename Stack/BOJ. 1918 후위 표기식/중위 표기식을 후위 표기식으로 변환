이 문제는 대표적인 스택 응용 문제 중 하나인 중위 표기식을 후위 표기식으로 변환하는 문제이다.

1. B * C -> B C *
2. A + (B * C) -> A + BC * -> ABC * +
3. A * (B + C) -> A * BC + -> ABC + *
4. A + B * C - D / E => (A + (B * C)) - (D / E)
-> (A + BC *) - (D / E) => ABC * + - (D / E) => ABC * + - DE / => ABC * + DE / -

1. 제일 기초적인 방법
A + B * C 인 경우를 보자.
1. 연산자를 만나면 스택에 넣고 피연산자를 만나면 정답 문자열에 붙여보자.
A + B * C 인 경우 답: ABC * +

2. 응용1: 현재 처리 중인 연산자의 우선순위가 스택에 있는 연산자보다 높을 경우: 스택에 현재 처리 중인 연산자 push
A + B * C 인 경우 답: ABC * +

3. 응용2 : 현재 처리 중인 연산자의 우선순위가 스택에 있는 연산자보다 작을 경우: 스택에서 자신보다 우선 순위가 높거나 같은 연산자들을 pop 자신은 push
A * B + C 인 경우 답: AB * C +

4. 응용3. : 현재 처리 중인 연산자의 우선순위가 스택에 있는 연산자와 같을 경우: 스택에서 자신보다 우선 순위가 높거나 같은 연산자들을 pop 자신은 push
A * B / C 인 경우 답: AB * C /

5. 용용4 : "("를 만날 경우 무조건 스택에 삽입, ")"를 만날 경우 "("를 꺼낼 때까지 pop
A + B * (C - D) / E 답: ABCD - * E / +
[+] AB
[+ *] AB
[+ * (] ABC
[+ * ( -] ABCD
[+ * ] ABCD -
[+ /] ABCD - * E
ABCD - * E / +


A + B * C - D / E
[+] AB
[+ *] ABC
[-] ABC * +
[- / ] ABC * + DE
ABC * + DE / -


알고리즘
1. 피연산자를 만나면 그대로 출력
2. 연산자를 만나면 스택에 저장했다가 스택보다 우선 순위가 낮은 연산자가 나오면 그 때 출력
    -> 저장할 때 스택을 먼저 살펴야함.
    -> 스택에 저장할 때 자신보다 우선순위가 크거나 같은 연산자는 먼저 보내줘야함.
3. 왼쪽 괄호는 우선 순위가 가장 낮은 연산자로 취급
4. 오른쪽 괄호가 나오면 스택에서 왼쪽 괄호 위에 쌓여 있는 모든 연산자를 출력.
곱하기가 있는데 더하기가 그 위에 올라탈 수 없음.
먼저 나오는게 먼저 계산하는 것이므로.

빼기가 있는데 더하기가 그 위에 올라탈 수 없음
>> 우선순위가 같다면 먼저 등장했던 얘를 먼저 해줘야하므로!
자기보다 만만한 얘가 스택에 있다면 올라타자.